name: Build gocqhttp image
on: workflow_dispatch

jobs:
  push_to_registry:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-20.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Fecth latest gocqhttp version
        id: fetch_gocq
        shell: python
        run: |
          import urllib.request, json, sys
          res = urllib.request.urlopen("https://api.github.com/repos/Mrs4s/go-cqhttp/releases?per_page=1").read()
          releases = json.loads(res)
          version = releases[0]["tag_name"]
          if version.startswith("v"):
              version = version[1:]
          print("::set-output name=version::" + version)
          for asset in releases[0]["assets"]:
              if asset["name"].endswith("linux_amd64.tar.gz"):
                  print("::set-output name=asset_url::" + asset["browser_download_url"])
                  sys.exit(0)
          sys.exit(1)

      - name: Download latest gocqhttp
        run: |
          wget -q ${{ steps.fetch_gocq.outputs.asset_url }} -O go-cqhttp.tar.gz
          tar zxf go-cqhttp.tar.gz

      - name: Build go-cqhttp image
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          repository: pcrbot/gocqhttp
          dockerfile: gocqhttp/Dockerfile
          tags: latest,${{ steps.fetch_gocq.outputs.version }}

      - name: Build go-cqhttp-ffmpeg image
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          repository: pcrbot/gocqhttp
          dockerfile: gocqhttp/ffmpeg.Dockerfile
          tags: ffmpeg,${{ steps.fetch_gocq.outputs.version }}-ffmpeg
